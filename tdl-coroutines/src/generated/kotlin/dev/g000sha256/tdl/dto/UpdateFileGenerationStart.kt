/*
 * Copyright 2025 Georgii Ippolitov (g000sha256)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package dev.g000sha256.tdl.dto

import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String

/**
 * The file generation process needs to be started by the application. Use setFileGenerationProgress and finishFileGeneration to generate the file.
 *
 * @property generationId Unique identifier for the generation process.
 * @property originalPath The original path specified by the application in inputFileGenerated.
 * @property destinationPath The path to a file that must be created and where the new file must be generated by the application. If the application has no access to the path, it can use writeGeneratedFilePart to generate the file.
 * @property conversion If the conversion is &quot;#url#&quot; than originalPath contains an HTTP/HTTPS URL of a file that must be downloaded by the application. Otherwise, this is the conversion specified by the application in inputFileGenerated.
 */
public class UpdateFileGenerationStart public constructor(
    public val generationId: Long,
    public val originalPath: String,
    public val destinationPath: String,
    public val conversion: String,
) : Update() {
    override fun equals(other: Any?): Boolean {
        if (other === this) {
            return true
        }
        if (other == null) {
            return false
        }
        if (other::class != this::class) {
            return false
        }
        other as UpdateFileGenerationStart
        if (other.generationId != generationId) {
            return false
        }
        if (other.originalPath != originalPath) {
            return false
        }
        if (other.destinationPath != destinationPath) {
            return false
        }
        return other.conversion == conversion
    }

    override fun hashCode(): Int {
        var hashCode = this::class.hashCode()
        hashCode = 31 * hashCode + generationId.hashCode()
        hashCode = 31 * hashCode + originalPath.hashCode()
        hashCode = 31 * hashCode + destinationPath.hashCode()
        hashCode = 31 * hashCode + conversion.hashCode()
        return hashCode
    }

    override fun toString(): String {
        return buildString {
            append("UpdateFileGenerationStart")
            append("(")
            append("generationId=")
            append(generationId)
            append(", ")
            append("originalPath=")
            append(originalPath)
            append(", ")
            append("destinationPath=")
            append(destinationPath)
            append(", ")
            append("conversion=")
            append(conversion)
            append(")")
        }
    }
}

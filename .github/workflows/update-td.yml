name: Update TDLib

on:
  push:
    branches:
      - update-td

jobs:
  build-android:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: corretto

      - name: Setup dependencies
        run: sudo apt-get install clang cmake gperf php

      - name: Check environment
        run: |
          cd td/example/android
          ./check-environment.sh

      - name: Fetch Android SDK
        run: |
          cd td/example/android
          ./fetch-sdk.sh

      - name: Build OpenSSL
        run: |
          cd td/example/android
          ./build-openssl.sh

      - name: Build TDLib
        run: |
          cd td/example/android
          ./build-tdlib.sh

      - name: SHA256 checksums
        run: |
          cd td/example/android/tdlib/libs
          shasum -a 256 arm64-v8a/libtdjni.so
          shasum -a 256 armeabi-v7a/libtdjni.so
          shasum -a 256 x86/libtdjni.so
          shasum -a 256 x86_64/libtdjni.so

      - name: Copy libs
        run: |
          mkdir -p tdl-coroutines/src/androidMainGenerated/jniLibs/{arm64-v8a,armeabi-v7a,x86,x86_64}
          cp td/example/android/tdlib/libs/arm64-v8a/libtdjni.so tdl-coroutines/src/androidMainGenerated/jniLibs/arm64-v8a/libtdjni.so
          cp td/example/android/tdlib/libs/armeabi-v7a/libtdjni.so tdl-coroutines/src/androidMainGenerated/jniLibs/armeabi-v7a/libtdjni.so
          cp td/example/android/tdlib/libs/x86/libtdjni.so tdl-coroutines/src/androidMainGenerated/jniLibs/x86/libtdjni.so
          cp td/example/android/tdlib/libs/x86_64/libtdjni.so tdl-coroutines/src/androidMainGenerated/jniLibs/x86_64/libtdjni.so

      - name: Commit and push libs
        uses: EndBug/add-and-commit@v9
        with:
          pull: --rebase --autostash
          author_name: Georgii Ippolitov
          author_email: detmmpmznb@g000sha256.dev
          committer_name: GitHub
          committer_email: noreply@github.com
          message: TDLib for Android [skip ci]

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.14.1
          cache-disabled: false

      - name: Assemble generator
        run: ./gradlew tdl-coroutines-generator:assemble

      - name: Run generator
        run: ./gradlew tdl-coroutines-generator:run

      - name: Commit and push code changes
        uses: EndBug/add-and-commit@v9
        with:
          pull: --rebase --autostash
          author_name: Georgii Ippolitov
          author_email: detmmpmznb@g000sha256.dev
          committer_name: GitHub
          committer_email: noreply@github.com
          message: Update API [skip ci]

  build-jvm-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: corretto

      - name: Setup dependencies
        run: sudo apt-get install clang cmake gperf php

      - name: Prebuild TDLib
        run: |
          cd td
          mkdir jnibuild
          cd jnibuild
          cmake -DCMAKE_BUILD_TYPE=Release -DTD_ENABLE_JNI=ON -DCMAKE_INSTALL_PREFIX:PATH=../example/java/td ..
          cmake --build . --target install

      - name: Build TDLib
        run: |
          cd td/example/java
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DTd_DIR=$GITHUB_WORKSPACE/td/example/java/td/lib/cmake/Td -DCMAKE_INSTALL_PREFIX:PATH=.. ..
          cmake --build . --target install

      - name: SHA256 checksum
        run: |
          cd td/example/java/bin
          shasum -a 256 libtdjni.so

      - name: Copy lib
        run: |
          mkdir -p tdl-coroutines/src/jvmMainGenerated/resources
          cp td/example/java/bin/libtdjni.so tdl-coroutines/src/jvmMainGenerated/resources/libtdjni.so

      - name: Commit and push lib
        uses: EndBug/add-and-commit@v9
        with:
          pull: --rebase --autostash
          author_name: Georgii Ippolitov
          author_email: detmmpmznb@g000sha256.dev
          committer_name: GitHub
          committer_email: noreply@github.com
          message: TDLib for JVM Linux [skip ci]

  build-jvm-macos:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: corretto

      - name: Setup dependencies
        run: brew install cmake coreutils gperf

      - name: Prebuild TDLib
        run: |
          cd td
          mkdir jnibuild
          cd jnibuild
          cmake -DCMAKE_BUILD_TYPE=Release -DTD_ENABLE_JNI=ON -DCMAKE_INSTALL_PREFIX:PATH=../example/java/td ..
          cmake --build . --target install

      - name: Build TDLib
        run: |
          cd td/example/java
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DTd_DIR=$GITHUB_WORKSPACE/td/example/java/td/lib/cmake/Td -DCMAKE_INSTALL_PREFIX:PATH=.. ..
          cmake --build . --target install

      - name: SHA256 checksum
        run: |
          cd td/example/java/bin
          shasum -a 256 libtdjni.dylib

      - name: Copy lib
        run: |
          mkdir -p tdl-coroutines/src/jvmMainGenerated/resources
          cp td/example/java/bin/libtdjni.dylib tdl-coroutines/src/jvmMainGenerated/resources/libtdjni.dylib

      - name: Commit and push lib
        uses: EndBug/add-and-commit@v9
        with:
          pull: --rebase --autostash
          author_name: Georgii Ippolitov
          author_email: detmmpmznb@g000sha256.dev
          committer_name: GitHub
          committer_email: noreply@github.com
          message: TDLib for JVM macOS [skip ci]

  check:
    needs:
      - build-android
      - build-jvm-linux
      - build-jvm-macos
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          lfs: true
          submodules: false

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: corretto

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.14.1
          cache-disabled: false

      - name: Assemble library
        run: |
          ./gradlew tdl-coroutines:assembleRelease
          ./gradlew tdl-coroutines:jvmJar

      - name: Assemble example
        run: ./gradlew tdl-coroutines-example:assembleRelease
